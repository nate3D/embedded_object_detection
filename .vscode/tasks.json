{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "BuildAndDebugObjectDetect",
            "type": "shell",
            "command": "/usr/bin/g++",
            "dependsOn": "CreateBuildDir",
            "args": [
                "-std=c++17",
                "-I${workspaceFolder}/../..",
                "-I/usr/include/opencv4",
                "-L/usr/lib/aarch64-linux-gnu",
                "-g",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${fileBasenameNoExtension}",                
                "-lopencv_core",
                "-lopencv_imgcodecs",
                "-lopencv_imgproc",
                "-lopencv_highgui",
                "-lopencv_videoio",
                "-lopencv_dnn",
                "-lzmq",
                "-lstdc++fs"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },   
        {
            "label": "BuildAndDebugAWSClient",
            "type": "shell",
            "command": "/usr/bin/g++",
            "dependsOn": "CreateBuildDir",
            "args": [
                "-std=c++17",
                "-I${workspaceFolder}/../..",
                "-I/usr/include/opencv4",
                "-L/usr/lib/aarch64-linux-gnu",
                "-g",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${fileBasenameNoExtension}",                
                "-lopencv_core",
                "-lopencv_imgcodecs",
                "-lopencv_imgproc",
                "-lopencv_highgui",
                "-lopencv_videoio",
                "-lzmq",
                "-lstdc++fs",
                "-laws-cpp-sdk-iot",
                "-laws-cpp-sdk-core",
                "-laws-cpp-sdk-s3"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "CreateBuildDir",
            "type": "shell",
            "command": "mkdir",
            "args": [
                "-p",
                "${workspaceFolder}/build"
            ],
            "problemMatcher": []
        },        
        {
            "type": "cppbuild",
            "label": "Build",
            "command": "/usr/bin/g++",
            "args": [
                "-std=c++17",
                "-I${workspaceFolder}/../..",
                "-I/usr/include/opencv4",
                "-L/usr/lib/aarch64-linux-gnu",
                "-g",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${fileBasenameNoExtension}",                
                "-lopencv_core",
                "-lopencv_imgcodecs",
                "-lopencv_imgproc",
                "-lopencv_highgui",
                "-lopencv_videoio",
                "-lopencv_dnn",
                "-lzmq",
                "-lstdc++fs",
                "-laws-cpp-sdk-iot",
                "-laws-cpp-sdk-core",
                "-laws-cpp-sdk-s3"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "compiler: /usr/bin/g++"
        },
        {
            "type": "cppbuild",
            "label": "Build_min",
            "command": "/usr/bin/g++",
            "args": [
                "-std=c++17",
                "-I${workspaceFolder}/../..",
                "-I/usr/include/opencv4",
                "-L/usr/lib/aarch64-linux-gnu",
                "-g",
                "${file}",
                "-o",
                "${workspaceFolder}/build/${fileBasenameNoExtension}",                
                "-lopencv_core",
                "-lopencv_imgcodecs",
                "-lopencv_imgproc",
                "-lopencv_highgui",
                "-lopencv_videoio"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "detail": "compiler: /usr/bin/g++"
        }
    ]
}